1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

count1 = int(input("Ведите делимое "))
count2 = int(input("Ведите делитель "))


def calculate(a, b):
    try:
        return a / b
    except ZeroDivisionError:
        return "На ноль делить нельзя!"


result = calculate(count1, count2)

print(f"{count1}/{count2}={result}")


2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

def iform(name, surname, year, city, email, phone):
    print(f"{name} {surname} {year} {city} {email} {phone}")

iform(name="Keyt", surname="Forbs", year="1990", city="New York", email="keytF@gmail.com", phone="999-999-9999")

3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

def my_func(x, y, z):
    count = [x, y, z]
    count.remove(min(count))
    print(sum(count))

my_func(2, 5, 8)

4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить возведение числа x в степень y. 
Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
** Подсказка:** попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func1(x, y):
    return x ** y


def my_func2(x, y):
    a = 1
    while y < 0:
        a = a * x
        y += 1
    return 1 / a


print(my_func1(5, -4))
print(my_func2(5, -4))


5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, 
разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, 
выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме 
и после этого завершить программу.

result = 0

while True:
    print("Сумма чисел равна", result)
    user_count = input("Для выхода нвведите q."
                       "Введите числа через пробел >>> ")
    count_list = user_count.split()
    for count in count_list:
        try:
            number = float(count)
            result += number
        except:
            if count == 'q':
                print("Итоговая сумма равна ", result)
                exit()

            else:
                print(count, "- неверный формат")

print(result)

6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. 
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

def int_func1(text):
    return text.capitalize()


print(int_func1("next"))


def int_func2(text):
    result = []
    for word in text:
        word = str(word)
        word = word[1:].capitalize()
        result.append(word)
    return result


user_text = list(input("Введите предложение >>> ").split())
print(int_func2(user_text))
